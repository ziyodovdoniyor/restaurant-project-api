definitions:
  postgres.PurchaseR:
    properties:
      beverage_id:
        type: string
      dessert_id:
        type: string
      first_meal_id:
        type: string
      salad_id:
        type: string
      second_meal_id:
        type: string
      table_id:
        type: string
    type: object
  types.Food:
    properties:
      category:
        type: string
      cooked_at:
        type: string
      id:
        type: string
      ingredients:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  types.PreEnterFood:
    properties:
      category:
        type: string
      ingredients:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  types.Purchase:
    properties:
      beverage_id:
        type: string
      dessert_id:
        type: string
      first_meal_id:
        type: string
      purchased_at:
        type: string
      salad_id:
        type: string
      second_meal_id:
        type: string
      table_id:
        type: string
      total:
        type: integer
    type: object
  types.UpdateFood:
    properties:
      ingredients:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a restaurant project.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Restaurant API
  version: "1.0"
paths:
  /add/food:
    post:
      consumes:
      - application/json
      description: Add food to the menu, food name must be unique
      parameters:
      - description: Food info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.PreEnterFood'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Add food
      tags:
      - sunbula
  /delete/food/:
    delete:
      consumes:
      - application/json
      description: deletes food by its name
      parameters:
      - description: delete food by name
        in: query
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Delete food
      tags:
      - sunbula
  /food/:
    get:
      consumes:
      - application/json
      description: it gets all information about the asked food
      parameters:
      - description: search food by name
        in: query
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Food'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get food
      tags:
      - sunbula
  /menu:
    get:
      description: shows all items in the menu
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/types.Food'
              type: array
            type: array
        "500":
          description: Internal Server Error
      summary: Menu
      tags:
      - sunbula
  /menu/dessert:
    get:
      consumes:
      - application/json
      description: it gets dessert information
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Food'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: dessert
      tags:
      - meals
  /menu/drink:
    get:
      consumes:
      - application/json
      description: it gets drink information
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Food'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: drink
      tags:
      - meals
  /menu/first-meal:
    get:
      consumes:
      - application/json
      description: it gets first meal information
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Food'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: first meals
      tags:
      - meals
  /menu/salad:
    get:
      consumes:
      - application/json
      description: it gets salad information
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Food'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: salads
      tags:
      - meals
  /menu/second-meal:
    get:
      consumes:
      - application/json
      description: it gets second meal information
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Food'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: second meals
      tags:
      - meals
  /table:
    post:
      consumes:
      - application/json
      description: you can choose one of the free tables
      parameters:
      - description: table number
        in: query
        name: num
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Order a table
      tags:
      - tables
  /table/buy:
    post:
      consumes:
      - application/json
      description: you can buy any food
      parameters:
      - description: order info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/postgres.PurchaseR'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Purchase'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Buy a product
      tags:
      - tables
  /tables:
    get:
      consumes:
      - application/json
      description: shows all the free tables
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                type: integer
              type: array
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: GetTables
      tags:
      - tables
  /update/food/:
    put:
      consumes:
      - application/json
      description: Update food in the menu
      parameters:
      - description: update food by name
        in: query
        name: name
        required: true
        type: string
      - description: Food info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.UpdateFood'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Update food
      tags:
      - sunbula
swagger: "2.0"
